Exception in thread "main" java.lang.IllegalArgumentException: The VcsInfo(type=Git, url=https://dev.azure.com/SW4ZF/AZP-433_DivDI_ZF_CyS_Training/_git/sw-constr-app, revision=e7d5fa56f18b436de665a4c9221c28e8d27f5dbd, path=ZZZ_Tool_Configuration/cmake-sbom/dist/common) of project 'PIP::common:e7d5fa56f18b436de665a4c9221c28e8d27f5dbd' cannot be found in Repository(vcs=VcsInfo(type=, url=, revision=, path=), vcsProcessed=VcsInfo(type=, url=, revision=, path=), nestedRepositories={}, config=RepositoryConfiguration(analyzer=RepositoryAnalyzerConfiguration(allowDynamicVersions=null, enabledPackageManagers=[Gradle, Maven, NPM, Bundler, Pip], disabledPackageManagers=null, packageManagers=null, skipExcluded=false), excludes=Excludes(paths=[PathExclude(pattern=CyS-Training/sw-tools/sw-sip-bsw/**, reason=BUILD_TOOL_OF, comment=Requires external DaVinci installation; not part of build.), PathExclude(pattern=**/DaVinciConfigurator/**, reason=BUILD_TOOL_OF, comment=Exclude DaVinciConfigurator Gradle template not part of the product build.), PathExclude(pattern=**/cmake-sbom/dist/common/**, reason=BUILD_TOOL_OF, comment=Exclude training / generated SBOM configs without VCS context.), PathExclude(pattern=**/src/{:funTest|test}/**, reason=TEST_OF, comment=Licenses contained in this directory are used for testing and do not apply to the OSS Review Toolkit.), PathExclude(pattern=evaluator/src/main/resources/rules/matrixseqexpl.json, reason=DATA_FILE_OF, comment=This file contains the OSADL license compatibility matrix used by the Evaluator.), PathExclude(pattern=examples/**, reason=EXAMPLE_OF, comment=This directory contains example files with licenses that do not apply to the OSS Review Toolkit.), PathExclude(pattern=utils/spdx/src/main/kotlin/{:SpdxDeclaredLicenseMapping|SpdxLicense|SpdxLicenseException|SpdxSimpleLicenseMapping}.kt, reason=DATA_FILE_OF, comment=Licenses contained in this class are used for processing licenses and do not apply to the OSS Review Toolkit.), PathExclude(pattern=utils/spdx/src/main/resources/**, reason=DATA_FILE_OF, comment=Licenses contained in this directory are used for generating license notes and mapping licenses and exceptions.), PathExclude(pattern=utils/test/**, reason=TEST_OF, comment=Licenses contained in this directory are used for testing and do not apply to the OSS Review Toolkit.)], scopes=[ScopeExclude(pattern=(test.*|funTest.*), reason=TEST_DEPENDENCY_OF, comment=Packages for testing only. Not part of released artifacts.), ScopeExclude(pattern=devDependencies, reason=DEV_DEPENDENCY_OF, comment=Packages for development only. Not part of released artifacts.), ScopeExclude(pattern=dokka.*, reason=BUILD_DEPENDENCY_OF, comment=Packages for the Dokka documentation engine.), ScopeExclude(pattern=graphql.*, reason=BUILD_DEPENDENCY_OF, comment=Packages for the generation of GraphQL clients by the GraphQL Kotlin build plugin.)]), includes=org.ossreviewtoolkit.model.config.Includes@5da2966, resolutions=Resolutions(issues=[IssueResolution(message=ERROR: Timeout after 300 seconds while scanning file 'reporter-web-app/public/index.html'., reason=SCANNER_ISSUE, comment=The error can be ignored because the file does contain relevant license information.), IssueResolution(message=ERROR: Timeout after 300 seconds while scanning file 'scanner/src/test/assets/aws-java-sdk-core-1.11.160_scancode-2.9.7.json'., reason=SCANNER_ISSUE, comment=This file contains test data. Contained licenses do not apply to the OSS Review Toolkit.)], ruleViolations=[], vulnerabilities=[]), curations=Curations(packages=[], licenseFindings=[LicenseFindingCuration(path=README.md, startLines=[], lineCount=1, detectedLicense=GPL-1.0-or-later, concludedLicense=NONE, reason=DOCUMENTATION_OF, comment=Findings reference a file with 'gpl' in its name.), LicenseFindingCuration(path=plugins/package-managers/python/src/funTest/assets/projects/external/spdx-tools-python/spdx/licenses.json, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=CC0-1.0, reason=DATA_OF, comment=This file contains official SPDX.org license ids. SPDX is licensed under CC0-1.0, see https://github.com/spdx/license-list-XML/blob/master/package.json#L33.), LicenseFindingCuration(path=plugins/package-managers/composer/src/funTest/assets/projects/synthetic/{empty-deps,lockfile,no-lockfile,no-deps,with-provide,with-replace}/composer.phar, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=MIT, reason=DATA_OF, comment=These files are part of PHP Composer and include a mapping from human readable strings to SPDX license ids.), LicenseFindingCuration(path=docs/**/*.md, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=Apache-2.0, reason=DOCUMENTATION_OF, comment=Documentation contains examples mentioning various licenses.), LicenseFindingCuration(path=plugins/reporters/web-app-template/index.html, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=Apache-2.0, reason=DATA_OF, comment=This file contains license identifiers in test data.), LicenseFindingCuration(path=utils/spdx/src/main/kotlin/SpdxLicense.kt, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=Apache-2.0, reason=DATA_OF, comment=This file defines official SPDX.org licenses so they can be used in OSS Review Toolkit.), LicenseFindingCuration(path=utils/spdx/src/main/kotlin/SpdxLicenseException.kt, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=Apache-2.0, reason=DATA_OF, comment=This file defines official SPDX.org exceptions so they can be used in OSS Review Toolkit.), LicenseFindingCuration(path=utils/spdx/src/main/resources/{declared-license-mapping.yml,deprecated-license-mapping.yml,exception-mapping.yml,simple-license-mapping.yml}, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=Apache-2.0, reason=DATA_OF, comment=These files contain mappings for licenses and exceptions.), LicenseFindingCuration(path=utils/spdx/src/main/resources/licenserefs/**, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=CC0-1.0, reason=DATA_OF, comment=This directory contains all non-official SPDX license ids which are used to generate open source notices. SPDX and ScanCode license files are licensed under CC0-1.0, see https://github.com/spdx/license-list-XML/blob/master/package.json#L33 and https://github.com/nexB/scancode-toolkit/blame/develop/README.rst#L168.), LicenseFindingCuration(path=utils/spdx/src/main/resources/licenses/**, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=CC0-1.0, reason=DATA_OF, comment=This directory contains all official SPDX.org license ids which are used to generate open source notices. SPDX and ScanCode license files are licensed under CC0-1.0, see https://github.com/spdx/license-list-XML/blob/master/package.json#L33.), LicenseFindingCuration(path=utils/spdx/src/test/kotlin/SpdxExpressionTest.kt, startLines=[], lineCount=null, detectedLicense=null, concludedLicense=Apache-2.0, reason=CODE, comment=This file uses several variables named after licenses.)]), packageConfigurations=[], licenseChoices=LicenseChoices(repositoryLicenseChoices=[], packageLicenseChoices=[]), snippetChoices=[])).
	at org.ossreviewtoolkit.model.OrtResult.getFilePathRelativeToAnalyzerRoot(OrtResult.kt:278)
	at org.ossreviewtoolkit.model.OrtResult.getDefinitionFilePathRelativeToAnalyzerRoot(OrtResult.kt:241)
	at org.ossreviewtoolkit.model.config.Excludes.findPathExcludes(Excludes.kt:56)
	at org.ossreviewtoolkit.model.OrtResult.projects_delegate$lambda$21(OrtResult.kt:196)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:86)
	at org.ossreviewtoolkit.model.OrtResult.getProjects(OrtResult.kt:192)
	at org.ossreviewtoolkit.model.OrtResult.isProjectExcluded(OrtResult.kt:657)
	at org.ossreviewtoolkit.model.OrtResult.packages_delegate$lambda$8(OrtResult.kt:141)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:86)
	at org.ossreviewtoolkit.model.OrtResult.getPackages(OrtResult.kt:124)
	at org.ossreviewtoolkit.model.OrtResult.getUncuratedPackages(OrtResult.kt:577)
	at org.ossreviewtoolkit.model.OrtResult.getUncuratedPackages$default(OrtResult.kt:575)
	at org.ossreviewtoolkit.utils.config.OrtResultExtensionsKt.setPackageCurations(OrtResultExtensions.kt:47)
	at org.ossreviewtoolkit.analyzer.Analyzer.analyze(Analyzer.kt:165)
	at org.ossreviewtoolkit.plugins.commands.analyzer.AnalyzeCommand.run(AnalyzeCommand.kt:210)
	at com.github.ajalt.clikt.core.CoreCliktCommandKt.parse(CoreCliktCommand.kt:107)
	at com.github.ajalt.clikt.core.CoreCliktCommandKt.main(CoreCliktCommand.kt:78)
	at com.github.ajalt.clikt.core.CoreCliktCommandKt.main(CoreCliktCommand.kt:90)
	at org.ossreviewtoolkit.cli.OrtMainKt.main(OrtMain.kt:86)
